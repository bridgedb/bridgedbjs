#!/usr/bin/env node

var fs = require("fs");
var path = require("path");
var BridgeDb = require("../es5/BridgeDb").BridgeDb;
var ndjson = require("ndjson");
var JSONStream = require("JSONStream");
var npmPackage = require("../package.json");
var program = require("commander");
var Rx = require("rx-extra");
require("../es5/spinoffs/pipeToStdout");
require("../es5/spinoffs/toNodeStream");
var VError = require("verror");
var createXrefsCLI = require("./createXrefsCLI");

program
  .version(npmPackage.version)
  .description("CLI client for BridgeDb xref identifier mapping webservice.");

program
  .command("datasource <input> [as]")
  .description(`
  To IDENTIFY the format of a data source, leave "as" empty.
      Example: What format is "Entrez Gene"?
        bridgedb datasource "Entrez Gene"
        yields: "http://vocabularies.bridgedb.org/ops#conventionalName"
                (BridgeDb conventional name)
      Example: What format is "ncbigene"?
        bridgedb datasource "ncbigene"
        yields: "http://identifiers.org/idot/preferredPrefix"
                (identifiers.org (Miriam) preferred prefix)

  To CONVERT a data source to another format, specify "as".
      Example: what is the identifiers.org preferred prefix for BridgeDb conventional name "Entrez Gene"?
        bridgedb datasource "Entrez Gene" "http://identifiers.org/idot/preferredPrefix"
        yields: "ncbigene"

  The data comes from BridgeDb.
`
  )
  .action(function(input, as, options) {
    var serialize = ndjson.serialize();
    if (process.env.NODE_ENV === "development") {
      if (!process.env.MOCK_SERVER_WARNING_GIVEN) {
        console.warn("Using development mock server.");
        process.env.MOCK_SERVER_WARNING_GIVEN = "yes";
      }
      //*TODO: use this instance for testing:
      var bridgeDb = new BridgeDb({
        baseIri: "http://localhost:4522/",
        dataSourcesHeadersIri: "http://localhost:4522/datasources_headers.txt",
        dataSourcesMetadataIri: "http://localhost:4522/datasources.txt"
      });
      //*/
    } else {
      var bridgeDb = new BridgeDb();
    }
    if (!!as) {
      bridgeDb
        .convertXrefDataSourceTo(as, input)
        .throughNodeStream(serialize)
        .pipeToStdout();
    } else {
      bridgeDb
        .identifyHeaderNameForXrefDataSource(input)
        .throughNodeStream(serialize)
        .pipeToStdout();
    }
  })
  .on("--help", function() {
    console.log(
      fs
        .readFileSync(path.join(__dirname, "datasource.help.sh"), "utf8")
        // We drop the shebang when displaying here as help
        .replace(/^.*\n/, "")
        // We also drop bash comment characters
        .replace(/^#(\ )?/gm, "")
        // and replace path to bridgedb with just bridgedb
        .replace(/(\.\/)?bin\/(bridgedb)/gm, "$2")
    );
  });

createXrefsCLI(program);

program.command("*").action(function(cmd) {
  console.error("");
  console.error(
    '  Unrecognized command "%s". Valid commands shown below:',
    cmd
  );
  program.outputHelp();
});

program.parse(process.argv);

// If no command is specified, output help.
if (!process.argv.slice(2).length) {
  program.outputHelp();
}
