{
  "name": "bridgedb",
  "version": "6.2.1",
  "description": "JS client for BridgeDb.org ID mapping framework webservices",
  "main": "es5/index.js",
  "module": "esnext/index.js",
  "jsnext:main": "esnext/index.js",
  "typings": "es5/index.d.ts",
  "bin": "./bin/bridgedb",
  "files": [
    "es5/",
    "src/",
    "dist/",
    "esnext/",
    "bin/",
    "package.json",
    "package-lock.json",
    "tsconfig.json",
    "tsconfig.base.json",
    "tsconfig.demo.json",
    "tsconfig.esnext.json",
    "typings/index.d.ts",
    "typings/organism.d.ts"
  ],
  "scripts": {
    "assets": "css_path=$(node -p 'require.resolve(\"react-select/dist/react-select.css\")') && mkdir -p es5/components && mkdir -p esnext/components && cp \"$css_path\" ./es5/components/react-select.css && cp \"$css_path\" ./src/components/react-select.css && cp \"$css_path\" ./esnext/components/react-select.css && echo ok || echo not ok",
    "prepare": "ALLE_DIR='../../../'; if [ ! -d ./node_modules ] && [ -d $ALLE_DIR/node_modules ]; then echo 'Alle configuration detected. Testing from the top-level alle directory...' && (cd $ALLE_DIR && npm run 'bridgedb:build'); else npm run build; fi",
    "prepublishOnly": "npm i --package-lock-only && ALLE_DIR='../../../'; if [ ! -d ./node_modules ] && [ -d $ALLE_DIR/node_modules ]; then echo 'Alle configuration detected. Testing from the top-level alle directory...' && (cd $ALLE_DIR && npm run 'bridgedb:test'); else npm run test; fi",
    "postpublish": "TAG=\"$(jq -r .version package.json)\" && git commit -am \"Bumped to version $TAG\" && git tag -a $TAG -m \"Published version $TAG\" && git push origin $TAG",
    "build": "npm run compile && mkdir -p dist && rm -rf dist/* && browserify ./es5/index.js -o ./dist/index.js -d -t cssify",
    "build-demo": "npm run compile:es5:ui && npm run compile:es5:ui:test && browserify ./test/e2e/ui-components-local.test.js -o ./demo/ui-combo.bundle.js -d",
    "compile": "npm-run-all -p compile:*",
    "compile:es5": "mkdir -p es5 && rm -rf es5/* && npm run assets && tsc --project tsconfig.json && echo ok || echo not ok",
    "compile:esnext": "mkdir -p esnext && rm -rf esnext/* && npm run assets && tsc --project tsconfig.esnext.json && echo ok || echo not ok",
    "compile-demo:es5:ui": "tsc src/components/react-demo.tsx --jsx react --sourceMap --lib dom,es5,scripthost --module commonjs --outDir components/ && echo ok || echo not ok",
    "compile-demo:es5:ui:test": "tsc --project tsconfig.demo.json && echo ok || echo not ok",
    "dev": "npm run build:es5",
    "start": "npm-run-all -p start:*",
    "start:mockserver": "pm2 --silent start ./es5/spinoffs/mockserverPM/mockserverPM.js --name mockserverPM # Get mockserver working for xrefsBatch queries. Get --name param working for 'pm2 start' on NixOS. ",
    "start:ui": "webpack-dev-server --config webpack.config.js --progress --colors --watch",
    "stop": "npm-run-all -p stop:*",
    "stop-broken-on-nixos:mockserver": "echo 'Stopping mockserver' && pm2 --silent stop mockserverPM && pm2 --silent delete mockserverPM # Broken because 'pm2 start --name' not setting app name on NixOS.",
    "stop:mockserver": "pms_running=$(pm2 list -m | awk '/+---/ {print $2}' | wc -l) && if [ $pms_running -eq 1 ]; then pm2 --silent kill; elif [ $pms_running -gt 1 ]; then bash bin/mockserver_confirm_stop.sh; fi",
    "test": "npm-run-all --silent -p test:*",
    "test:cli": "export NODE_ENV=development && export MOCK_SERVER_WARNING_GIVEN='yes' && npm-run-all -s stop:mockserver start:mockserver -p test:cli:datasource test:cli:dsvXrefs test:cli:jsonXrefs test:cli:noneXrefs -s stop:mockserver",
    "test:cli:dsvXrefs": "sh ./test/dsvXrefs.sh && (unset NODE_ENV && echo 'TODO: Mock requests in dsvXrefs-no-test-server.sh' && sh ./test/dsvXrefs-no-test-server.sh) && sh ./bin/dsvXrefs.help.sh > /dev/null && echo 'Completed test:cli:dsvXrefs' || exit 1",
    "test:cli:datasource": "sh ./test/datasource.sh && sh ./bin/datasource.help.sh > /dev/null && echo 'Completed test:cli:datasource' || exit 1",
    "test:cli:jsonXrefs": "(unset NODE_ENV && echo 'TODO: Mock requests in jsonXrefs.sh' && sh ./test/jsonXrefs.sh && sh ./bin/jsonXrefs.help.sh > /dev/null) && echo 'Completed test:cli:jsonXrefs' || exit 1",
    "test:cli:noneXrefs": "(unset NODE_ENV && echo 'TODO: Mock requests in noneXrefs.sh' && sh ./test/noneXrefs.sh && sh ./bin/noneXrefs.help.sh > /dev/null) && echo 'Completed test:cli:noneXrefs' || exit 1",
    "test:ui": "echo 'TODO: Add tests for UI!'",
    "watch": "npm-run-all -p start:mockserver watch:*",
    "watch:client": "npm-watch",
    "watch:ui": "npm run start:ui"
  },
  "watch": {
    "dev": ["index.d.ts", "src/*.{ts,tsx}", "test/*.{ts,tsx,js,jsx}"],
    "test": ["index.js", "ui/*.{js,jsx}", "test/*.{js,jsx}"]
  },
  "browserify": {
    "transform": ["cssify"]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bridgedb/bridgedbjs.git"
  },
  "keywords": ["bridgedb", "biology"],
  "author": "BridgeDb team",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/bridgedb/bridgedbjs/issues"
  },
  "homepage": "https://bridgedb.github.io/bridgedbjs/docs/",
  "dependencies": {
    "JSONStream": "^1.3.5",
    "browserfs": "^1.4.3",
    "commander": "^2.20.0",
    "csstips": "^0.2.3",
    "fast-csv": "^3.4.0",
    "highland": "^2.13.5",
    "insert-css": "^2.0.0",
    "lodash": "^4.17.15",
    "ndjson": "^1.5.0",
    "react": "^16.10.0",
    "react-dom": "^16.10.0",
    "react-icons-kit": "^1.3.1",
    "react-select": "^1.3.0",
    "rx-extra": "2.1.3",
    "rxjs": "^5.5.12",
    "source-map-support": "^0.5.13",
    "typestyle": "^0.22.3",
    "verror": "^1.10.0",
    "xhr2": "^0.1.4"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.141",
    "@types/node": "^10.14.19",
    "@types/react": "^16.9.3",
    "@types/react-dom": "^16.9.1",
    "@types/rx": "^4.1.1",
    "browserify": "^16.5.0",
    "colors": "^0.6.2",
    "css-loader": "^3.2.0",
    "cssify": "^1.0.3",
    "global": "^4.4.0",
    "html-webpack-plugin": "^3.2.0",
    "inquirer": "^3.3.0",
    "jsdoc": "^3.6.3",
    "jsonld-markup": "^0.2.1",
    "mockserver": "^3.1.1",
    "npm-run-all": "^4.1.5",
    "npm-watch": "^0.3.0",
    "pm2": "^3.5.1",
    "through": "^2.3.8",
    "tower-strcase": "^0.5.0",
    "ts-loader": "^2.3.7",
    "tsify": "^3.0.4",
    "typescript": "^3.6.3",
    "watchify": "^3.11.1",
    "webpack": "^4.41.0",
    "webpack-dev-server": "^3.8.1",
    "webpack-hot-middleware": "^2.25.0",
    "yargs": "^9.0.1"
  },
  "semverBumper": {
    "jsonFiles": [
      {
        "filepath": "package.json",
        "key": "version"
      }
    ],
    "grepOptions": {
      "include": [],
      "exclude": [".git", "jsdoc-conf.json", "npm-debug.log"],
      "excludeDir": [
        "./docs",
        "./test",
        "./bower_components",
        "./es5",
        "./esnext",
        "./demo",
        "./dist"
      ]
    }
  }
}
